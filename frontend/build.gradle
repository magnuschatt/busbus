plugins {
    id "com.eriwen.gradle.css" version "2.14.0"
}

apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlinx-serialization'

dependencies {
    expectedBy project(':common')
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
}

ext.jsDir = "$project.buildDir.path/js"
ext.cssDir = "$project.buildDir.path/resources/main/css"
ext.webDir = "${project(":backend").projectDir}/build/web"
ext.webJsFile = "$webDir/${project.name}.js"
ext.webCssFile = "$webDir/${project.name}.css"
ext.herokuWebDir = "$rootDir/build/web"

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$jsDir/${project.name}_main.js"
    kotlinOptions.sourceMap = true
}

assemble.doLast {
    file(webDir).mkdir()

    configurations.compile.each { File file ->
        copy {
            includeEmptyDirs = false

            from zipTree(file.absolutePath)
            into "$jsDir"
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
            }
        }
    }

    copy {
        from "$project.buildDir.path/resources/main/html"
        into webDir
    }

    copy {
        from jsDir
        into webDir
    }

    combineCss.run()
    minifyCss.run()

    copy {
        from webDir
        into herokuWebDir
    }
}

combineCss {
    source = cssDir
    dest = webCssFile
}

minifyCss {
    source = combineCss
    dest = webCssFile
    yuicompressor {
        lineBreakPos = -1
    }
}